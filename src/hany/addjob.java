/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hany;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author amnassar
 */
public final class addjob extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
    PreparedStatement pst;
    ResultSet rs;
    public String y;
    public Calendar cal;
    public int day;
    public int month;
    public int year;
    String dayyy;
    public String datee;
    public String fulldatee;

    public addjob() {
        initComponents();

        tablelord();
        clear();
        TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tdetails.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        tdetails.getTableHeader().setFont(new Font("Arial", Font.BOLD, 20));
        tdetails.getTableHeader().setOpaque(false);
        tdetails.getTableHeader().setBackground(new Color(138, 203, 195));
        tdetails.getTableHeader().setForeground(new Color(0, 0, 0));
        tdetails.setRowHeight(40);
        cal = new GregorianCalendar();
        int dayy = cal.get(Calendar.DAY_OF_MONTH);
        dayyy = String.valueOf(dayy);
        if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
            dayyy = String.valueOf(dayy);
            dayyy = "0" + dayyy;
        }
        int month = cal.get(Calendar.MONTH) + 1;
        int year = cal.get(Calendar.YEAR);
        date1.setText(year + "-" + month + "-" + dayyy);
        datee = date1.getText().toString();
        TimeZone tz = TimeZone.getTimeZone("GMT+02");
        Calendar c = Calendar.getInstance(tz);
        String time = String.format("%02d", c.get(Calendar.HOUR_OF_DAY)) + ":"
                + String.format("%02d", c.get(Calendar.MINUTE));
        fulldatee = datee + " " + time;
        work.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        Font bigFont = new Font("Arial", Font.BOLD, 30); // or whatever
        tdetails.getTableHeader().setFont(bigFont);
        customer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        cmcustomer = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        autoserial4 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        work = new javax.swing.JTextField();
        delete4 = new javax.swing.JButton();
        save4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        serialid4 = new javax.swing.JLabel();
        date4 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(1050, 730));
        setMinimumSize(new java.awt.Dimension(1050, 730));
        setPreferredSize(new java.awt.Dimension(1050, 730));

        jPanel14.setBackground(new java.awt.Color(0, 0, 0));
        jPanel14.setForeground(new java.awt.Color(255, 255, 255));
        jPanel14.setMaximumSize(new java.awt.Dimension(1050, 730));
        jPanel14.setMinimumSize(new java.awt.Dimension(1050, 730));
        jPanel14.setPreferredSize(new java.awt.Dimension(1050, 730));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tdetails.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "التاريخ", "العمل", "العميل"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(0).setMinWidth(1);
            tdetails.getColumnModel().getColumn(0).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(0).setMaxWidth(1);
        }

        jPanel14.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 730, 330));

        cmcustomer.setEditable(true);
        cmcustomer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmcustomer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        cmcustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmcustomerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmcustomerMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmcustomerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmcustomerMouseReleased(evt);
            }
        });
        cmcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmcustomerActionPerformed(evt);
            }
        });
        cmcustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmcustomerKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmcustomerKeyReleased(evt);
            }
        });
        jPanel14.add(cmcustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 240, 30));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel22.setText("اسم العميل");
        jPanel14.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 140, 30));

        autoserial4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        autoserial4.setForeground(new java.awt.Color(255, 255, 255));
        autoserial4.setText("لإثسف");
        jPanel14.add(autoserial4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, 170, 60));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel37.setText("العمل");
        jPanel14.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 110, 70, 30));

        work.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel14.add(work, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 250, 30));

        delete4.setBackground(new java.awt.Color(138, 203, 195));
        delete4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        delete4.setText("مسح");
        delete4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete4ActionPerformed(evt);
            }
        });
        jPanel14.add(delete4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 610, 120, 40));

        save4.setBackground(new java.awt.Color(138, 203, 195));
        save4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save4.setText("حفظ");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });
        jPanel14.add(save4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 120, 40));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel14.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 730));

        serialid4.setText("jLabel1");
        jPanel14.add(serialid4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date4.setText("jLabel1");
        jPanel14.add(date4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 170, -1, -1));

        date1.setText("jLabel1");
        jPanel14.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 370, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1050, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel = (DefaultTableModel) tdetails.getModel();
        int selectrowindex = tdetails.getSelectedRow();
        serialid4.setText(tmodel.getValueAt(selectrowindex, 0).toString());
        work.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        cmcustomer.setSelectedItem(tmodel.getValueAt(selectrowindex, 3).toString());
    }//GEN-LAST:event_tdetailsMouseClicked

    private void delete4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete4ActionPerformed
        if (serialid4.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "اختر النوع المراد مسحة");

        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "حفظ العملية ؟", "رسالة تاكيد ", dialogButton);
            if (dialogResult == 0) {
                try {
                    String sql = "DELETE FROM battry.schudle WHERE id='" + serialid4.getText() + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(rootPane, " تم مسح العملية بنجاح");
                    tablelord();
                    clear();
                } catch (SQLException ex) {

                }
                clear();
            } else {

                JOptionPane.showMessageDialog(this, "الغاء العملية ");
            }
        }
    }//GEN-LAST:event_delete4ActionPerformed

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed

        try {
            String customerr = cmcustomer.getSelectedItem().toString();
            String workk = work.getText();
            String sql = "INSERT INTO battry.schudle (customer,work,date,fulldate,status) VALUES"
                    + " ('" + customerr + "','" + workk + "','" + datee + "','" + fulldatee + "','تحت التنفيذ')";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "تمت اضافة العملية بنجاح");
            tablelord();
            clear();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_save4ActionPerformed

    private void cmcustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMouseClicked

    private void cmcustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMouseEntered

    private void cmcustomerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMousePressed

    private void cmcustomerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMouseReleased

    private void cmcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmcustomerActionPerformed

    }//GEN-LAST:event_cmcustomerActionPerformed

    private void cmcustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmcustomerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerKeyPressed

    private void cmcustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmcustomerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel autoserial4;
    private javax.swing.JComboBox cmcustomer;
    private javax.swing.JLabel date1;
    private javax.swing.JLabel date4;
    private javax.swing.JButton delete4;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton save4;
    private javax.swing.JLabel serialid4;
    private javax.swing.JTable tdetails;
    private javax.swing.JTextField work;
    // End of variables declaration//GEN-END:variables

    public void tablelord() {
        try {
            String sqll = "SELECT * FROM battry.schudle where status= 'تحت التنفيذ' order by id DESC";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tdetails.getModel();
            model.setRowCount(0);
            int x = 1;
            while (rs.next()) {
                Object row[] = {
                    rs.getString("id"),
                    rs.getString("date"),
                    rs.getString("work"),
                    rs.getString("customer")

                };
                model.addRow(row);
                x++;

            }
            if (x >= 11) {
            } else {
                for (int z = x; z < 13; z++) {
                    Object rowData[] = {
                        "", "", "", "", "",};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException ex) {

        }
    }

    public void clear() {
        work.setText("");
        cmcustomer.setSelectedIndex(0);
        serialid4.setText("");
    }

    public void customer() {
        try {
            String sql = "SELECT name  FROM battry.customer  order by name";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                String namee = rs.getString("name");

                cmcustomer.addItem(namee);

            }

        } catch (SQLException ex) {

        }
    }

}
