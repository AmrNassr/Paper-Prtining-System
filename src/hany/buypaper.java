/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hany;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author amnassar
 */
public final class buypaper extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
     
    PreparedStatement pst;
    ResultSet rs;
    public String y;
    String dayyy;

    public buypaper() {
        try {
            initComponents();
             
            String sql = "DELETE FROM battry.sellbattryitems WHERE mark='No'";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
            pst.execute();
            TableCellRenderer rendererFromHeader = jTable1.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            jTable1.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            jTable1.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            jTable1.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
            jTable1.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
            jTable1.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
            jTable1.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
            jTable1.getTableHeader().setFont(new Font("Arial", Font.BOLD, 20));
            jTable1.getTableHeader().setOpaque(false);
            jTable1.getTableHeader().setBackground(new Color(138, 203, 195));
            jTable1.getTableHeader().setForeground(new Color(0, 0, 0));
            jTable1.setRowHeight(30);

            Calendar cal = new GregorianCalendar();
            int monthh = cal.get(Calendar.MONTH) + 1;
            int yearr = cal.get(Calendar.YEAR);
            int dayy = cal.get(Calendar.DAY_OF_MONTH);
            dayyy = String.valueOf(dayy);
            if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                    || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
                dayyy = String.valueOf(dayy);
                dayyy = "0" + dayyy;
            }
            day.setText(dayyy);
            month.setText(Integer.toString(monthh));
            year.setText(Integer.toString(yearr));
            auto_id();
            customer();
            mkas();
            ButtonGroup G = new ButtonGroup();
            G.add(two);
            G.add(one);
            one.setSelected(true);
        } catch (SQLException ex) {
            Logger.getLogger(buypaper.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        totalbill = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        paid = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        remaining = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        cmkind = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        save = new javax.swing.JButton();
        save1 = new javax.swing.JButton();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        one = new javax.swing.JRadioButton();
        two = new javax.swing.JRadioButton();
        khsm = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        cmcustomer = new javax.swing.JComboBox();
        s3 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        kindd = new javax.swing.JTextField();
        kholaf = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        tkfel = new javax.swing.JTextField();
        month = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        numberbook = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        number = new javax.swing.JTextField();
        s4 = new javax.swing.JLabel();
        year = new javax.swing.JTextField();
        serialbuy = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        serialid4 = new javax.swing.JLabel();
        date4 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        customerserial = new javax.swing.JLabel();
        typecustomer = new javax.swing.JLabel();
        kind1 = new javax.swing.JLabel();
        type1 = new javax.swing.JLabel();
        numberr1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        jLabel1.setText("jLabel1");

        setMaximumSize(new java.awt.Dimension(1050, 730));
        setMinimumSize(new java.awt.Dimension(1050, 730));
        setPreferredSize(new java.awt.Dimension(1050, 730));

        jPanel15.setBackground(new java.awt.Color(0, 0, 0));
        jPanel15.setForeground(new java.awt.Color(255, 255, 255));
        jPanel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel15.setMaximumSize(new java.awt.Dimension(1050, 730));
        jPanel15.setMinimumSize(new java.awt.Dimension(1050, 730));
        jPanel15.setPreferredSize(new java.awt.Dimension(1050, 730));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel28.setText("السعر");
        jPanel15.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 230, 60, 30));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel20.setText("اجمالي الفاتورة");
        jPanel15.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 560, 130, 30));

        totalbill.setEditable(false);
        totalbill.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        totalbill.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel15.add(totalbill, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 560, 110, 30));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel24.setText("المدفوع");
        jPanel15.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 560, 70, 30));

        paid.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        paid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        paid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paidKeyReleased(evt);
            }
        });
        jPanel15.add(paid, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 560, 110, 30));

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel31.setText("المتبقي");
        jPanel15.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 560, 100, 30));

        remaining.setEditable(false);
        remaining.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        remaining.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel15.add(remaining, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 560, 110, 30));

        price.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        price.setText("0");
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceKeyReleased(evt);
            }
        });
        jPanel15.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 230, 100, 30));

        cmkind.setEditable(true);
        cmkind.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        cmkind.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        cmkind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmkindMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmkindMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmkindMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmkindMouseReleased(evt);
            }
        });
        cmkind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmkindActionPerformed(evt);
            }
        });
        cmkind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmkindKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmkindKeyReleased(evt);
            }
        });
        jPanel15.add(cmkind, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 180, 130, 30));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel37.setText("نوع");
        jPanel15.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 170, 70, 40));

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "المجموع", "العدد", "السعر", "النوع", "المنتج", "ID"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setRowHeight(25);
        jTable1.setRowMargin(2);
        jTable1.setSelectionBackground(new java.awt.Color(204, 255, 255));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(150);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(1).setMinWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(2).setMinWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(5).setMinWidth(1);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(1);
        }

        jPanel15.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 800, 150));

        save.setBackground(new java.awt.Color(138, 203, 195));
        save.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save.setText("حفظ");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel15.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 620, 110, 40));

        save1.setBackground(new java.awt.Color(138, 203, 195));
        save1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save1.setText("مسح");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });
        jPanel15.add(save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 620, 110, 40));

        add.setBackground(new java.awt.Color(138, 203, 195));
        add.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        add.setText("اضافة");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel15.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 300, 80, 40));

        delete.setBackground(new java.awt.Color(138, 203, 195));
        delete.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        delete.setText("مسح العنصر");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel15.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 120, 60));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel21.setText("تاريخ");
        jPanel15.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 50, 30));

        jLabel51.setBackground(new java.awt.Color(255, 255, 255));
        jLabel51.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel51.setText("خصم");
        jPanel15.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, 70, 30));

        one.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        one.setText("وش");
        jPanel15.add(one, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 180, -1, 30));

        two.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        two.setText("وش و ظهر");
        jPanel15.add(two, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, 90, 30));

        khsm.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        khsm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        khsm.setText("0");
        khsm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                khsmKeyReleased(evt);
            }
        });
        jPanel15.add(khsm, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 560, 110, 30));

        day.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel15.add(day, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 60, 30));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel22.setText("اسم العميل");
        jPanel15.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 140, 30));

        cmcustomer.setEditable(true);
        cmcustomer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmcustomer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        cmcustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmcustomerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmcustomerMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmcustomerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmcustomerMouseReleased(evt);
            }
        });
        cmcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmcustomerActionPerformed(evt);
            }
        });
        cmcustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmcustomerKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmcustomerKeyReleased(evt);
            }
        });
        jPanel15.add(cmcustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 240, 30));

        s3.setBackground(new java.awt.Color(255, 255, 255));
        s3.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        s3.setText("/");
        jPanel15.add(s3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 10, -1));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel30.setText("الغلاف");
        jPanel15.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 60, 30));

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel34.setText("اسم الكتاب");
        jPanel15.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 130, 90, 30));

        name.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });
        jPanel15.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, 280, 30));

        kindd.setEditable(false);
        kindd.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        kindd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel15.add(kindd, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 70, 30));

        kholaf.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        kholaf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        kholaf.setText("0");
        kholaf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kholafKeyReleased(evt);
            }
        });
        jPanel15.add(kholaf, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, 100, 30));

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel33.setText("تقفيل");
        jPanel15.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 60, 30));

        tkfel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tkfel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tkfel.setText("0");
        tkfel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tkfelKeyReleased(evt);
            }
        });
        jPanel15.add(tkfel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 80, 30));

        month.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel15.add(month, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 60, 30));

        jLabel32.setBackground(new java.awt.Color(255, 255, 255));
        jLabel32.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel32.setText("عدد الكتب");
        jPanel15.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 280, 120, 30));

        numberbook.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        numberbook.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberbook.setText("1");
        numberbook.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberbookKeyReleased(evt);
            }
        });
        jPanel15.add(numberbook, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 280, 100, 30));

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel29.setText("عدد الورق");
        jPanel15.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, 120, 30));

        number.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        number.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        number.setText("1");
        number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberKeyReleased(evt);
            }
        });
        jPanel15.add(number, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 80, 30));

        s4.setBackground(new java.awt.Color(255, 255, 255));
        s4.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        s4.setText("/");
        jPanel15.add(s4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 10, -1));

        year.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel15.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 60, 30));

        serialbuy.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        serialbuy.setText("لإثسف");
        jPanel15.add(serialbuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 170, 50));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel15.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 760));

        serialid4.setText("jLabel1");
        jPanel15.add(serialid4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 670, -1, -1));

        date4.setText("jLabel1");
        jPanel15.add(date4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, -1, -1));

        serialid.setBackground(new java.awt.Color(255, 255, 255));
        serialid.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        serialid.setText("اسم العميل");
        jPanel15.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 140, 30));

        customerserial.setBackground(new java.awt.Color(255, 255, 255));
        customerserial.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        customerserial.setText("طول");
        jPanel15.add(customerserial, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 70, 30));

        typecustomer.setBackground(new java.awt.Color(255, 255, 255));
        typecustomer.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        typecustomer.setText("نوع");
        jPanel15.add(typecustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 160, 70, 40));

        kind1.setText("jLabel2");
        jPanel15.add(kind1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 600, -1, -1));

        type1.setText("jLabel3");
        jPanel15.add(type1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 620, -1, -1));

        numberr1.setText("jLabel2");
        jPanel15.add(numberr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 660, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1070, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmcustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmcustomerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerKeyReleased

    private void cmcustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmcustomerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerKeyPressed

    private void cmcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmcustomerActionPerformed
  Object obj = evt.getSource();
       if(obj==cmcustomer)
       {   
            try {
                  String sqll="SELECT *  FROM battry.customer where name = '"+cmcustomer.getSelectedItem().toString()+"'";
                  
                  pst=(PreparedStatement) DBConnect.con.prepareStatement(sqll);
                  
                  rs=pst.executeQuery();
                  
                  while(rs.next()){
                      customerserial.setText(rs.getString("serial"));
                      typecustomer.setText(rs.getString("type"));
                       kindd.setText(rs.getString("kind"));
                    if(rs.getString("kind").equals("بلوك"))
                    {
                        kindd.setBackground(Color.RED);
                    }
                   else if(rs.getString("kind").equals("مميز"))
                    {
                        kindd.setBackground(Color.GREEN);
                    }
                    else
                   {
                       kindd.setBackground(Color.WHITE);
                   }
                  }
            }
            catch(Exception ex)
            {
            }
               
       
                  }
    }//GEN-LAST:event_cmcustomerActionPerformed

    private void cmcustomerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMouseReleased

    private void cmcustomerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMousePressed

    private void cmcustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMouseEntered

    private void cmcustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmcustomerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmcustomerMouseClicked

    private void khsmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_khsmKeyReleased
          try {
            float amount = Float.parseFloat(totalbill.getText());
            float paidd = Float.parseFloat(paid.getText());
            float khsmk = Float.parseFloat(khsm.getText());
            float totall = amount - (paidd + khsmk);
            remaining.setText("" + totall);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_khsmKeyReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (serialid.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "من فضلك اختر العنصر ");

        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
            if (dialogResult == 0) {
                try {
                    String sql = "DELETE FROM battry.sellbattryitems WHERE id='" + serialid.getText() + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                    pst.execute();
                   
                    tablelord();
                } catch (SQLException ex) {

                }
            } else {

                JOptionPane.showMessageDialog(this, " الغاء");
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        auto_id();
        int paperside = 0;
        float amount = 0;
        if (cmcustomer.getSelectedIndex() == 0 || cmkind.getSelectedIndex() == 0
                || price.getText().trim().isEmpty()  || name.getText().trim().isEmpty() || number.getText().equals("0") || number.getText().trim().isEmpty()
                || numberbook.getText().equals("0") || numberbook.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "اكمل البيانات");
        } else {
            try {
                String datee1 = year.getText() + "-" + month.getText() + "-" + day.getText();
                TimeZone tz = TimeZone.getTimeZone("GMT+02");
                Calendar c = Calendar.getInstance(tz);
                String time = String.format("%02d", c.get(Calendar.HOUR_OF_DAY)) + ":"
                        + String.format("%02d", c.get(Calendar.MINUTE));
                String fulldatee = datee1 + " " + time;
                float pricee = Float.parseFloat(price.getText());
                int numberr = Integer.parseInt(number.getText());
                int numberrbook = Integer.parseInt(numberbook.getText());
                float tkfell = Float.parseFloat(tkfel.getText());
                float kholaff = Float.parseFloat(kholaf.getText());
                String customernamee = cmcustomer.getSelectedItem().toString();
                String kind = cmkind.getSelectedItem().toString();
                 String namee = name.getText();
                if (one.isSelected()) {
                    paperside = 1;
                } else {
                    paperside = 2;
                }
                float bookprice=(((numberr / paperside) * pricee) + tkfell + kholaff);
                float total = (((numberr / paperside) * pricee) + tkfell + kholaff) * numberrbook;
                String seriall = serialbuy.getText();
                String sqldaf = "SELECT * FROM battry.sellbattryitems where item='" + namee + "' and type='" + kind + "' and datee='" + datee1 + "' and buyserial='" + seriall + "'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sqldaf);
                rs = pst.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "العنصر تم اضافتة من قبل");
                    name.setText("");
                    name.requestFocus();
                    tablelord();
                    String sqld = "SELECT total FROM battry.sellbattryitems where datee='" + datee1 + "' and buyserial='" + seriall + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqld);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        amount = amount + (rs.getFloat("total"));
                    }
                    totalbill.setText("" + amount);

                } else {
                    String sql = "INSERT INTO battry.sellbattryitems (kind,buyserial,item,customername,type,number,price,total,datee,fulldate,customerserial) VALUES"
                            + " ('ورقيات','" + seriall + "','" + namee + "','" + customernamee + "','" + kind + "','" + numberrbook + "',"
                            + "'" + bookprice + "','" + total + "','" + datee1 + "','" + fulldatee + "','" + customerserial.getText() + "')";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                    pst.execute();
                    tablelord();
                    cmcustomer.setEnabled(false);
                    String sqld = "SELECT total FROM battry.sellbattryitems where datee='" + datee1 + "' and buyserial='" + seriall + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqld);
                    rs = pst.executeQuery();
                    while (rs.next()) {
                        amount = amount + (rs.getFloat("total"));
                    }
                    totalbill.setText("" + amount);

                }
                try {
                    float amountt = Float.parseFloat(totalbill.getText());
                    float paidd = Float.parseFloat(paid.getText());
                    float khsmk = Float.parseFloat(khsm.getText());
                    float totall1 = amountt - (paidd + khsmk);
                    remaining.setText("" + totall1);
                } catch (Exception e) {

                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, ex);

            }
            clear();
            cmcustomer.setEnabled(false);
        }
    }//GEN-LAST:event_addActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
        if (dialogResult == 0) {
            try {
                String sql = "DELETE FROM battry.sellbattryitems WHERE buyserial='" + serialbuy.getText() + "'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                pst.execute();
                String sql1 = "DELETE FROM battry.sellbattry WHERE  buyserial='" + serialbuy.getText() + "'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql1);
                pst.execute();
                JOptionPane.showMessageDialog(rootPane, "تم مسح الفاتورة");
                clear2();
            } catch (SQLException ex) {
                Logger.getLogger(buypaper.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, " الغاء");
        }

    }//GEN-LAST:event_save1ActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            float totalk = Float.parseFloat(totalbill.getText());
            float paidk = Float.parseFloat(paid.getText());
            float khsmk = Float.parseFloat(khsm.getText());
            float remainingk = totalk - (paidk + khsmk);
            if (totalk > paidk && !paid.getText().trim().isEmpty()) {
                String customername = cmcustomer.getSelectedItem().toString();
                String customerseriall = customerserial.getText();
                String seriall = serialbuy.getText();
                String datee1 = year.getText() + "-" + month.getText() + "-" + day.getText();
                TimeZone tz = TimeZone.getTimeZone("GMT+02");
                Calendar c = Calendar.getInstance(tz);
                String time = String.format("%02d", c.get(Calendar.HOUR_OF_DAY)) + ":"
                        + String.format("%02d", c.get(Calendar.MINUTE));
                String fulldatee = datee1 + " " + time;
                String sql = "INSERT INTO battry.sellbattry (kind,buyserial,customerserial,total,paid,remaining,datee,fulldate,customername,khsm) VALUES"
                        + " ('ورقيات','" + seriall + "','" + customerseriall + "','" + totalk + "','" + paidk + "','" + remainingk + "','" + datee1 + "','" + fulldatee + "','" + customername + "','" + khsmk + "')";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                pst.execute();

                String sqldaf = "SELECT * FROM battry.customeramount where name='" + customername + "' ";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sqldaf);
                rs = pst.executeQuery();
                if (rs.next()) {
                    String sqla = "UPDATE battry.customeramount SET total = total+" + remainingk + " WHERE  name='" + customername + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqla);
                    pst.executeUpdate();
                    String sqll3 = "INSERT INTO battry.customerlogs (name,type,date,fulldate,amount) VALUES"
                            + " ('" + customername + "','متبقي','" + datee1 + "','" + fulldatee + "','" + remainingk + "')";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll3);
                    pst.execute();
                    if (paidk > 0) {
                        String sqll33 = "INSERT INTO battry.customerlogs (name,type,date,fulldate,amount) VALUES"
                                + " ('" + customername + "','دفع','" + datee1 + "','" + fulldatee + "','" + paidk + "')";
                        pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll33);
                        pst.execute();
                    }

                } else {
                    String sqla = "INSERT INTO battry.customeramount (name,total) VALUES"
                            + " ('" + customername + "','" + remainingk + "')";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqla);
                    pst.execute();
                    String sqll3 = "INSERT INTO battry.customerlogs (name,type,date,fulldate,amount) VALUES"
                            + " ('" + customername + "','متبقي','" + datee1 + "','" + fulldatee + "','" + remainingk + "')";
                    String sqll33 = "INSERT INTO battry.customerlogs (name,type,date,fulldate,amount) VALUES"
                            + " ('" + customername + "','دفع','" + datee1 + "','" + fulldatee + "','" + paidk + "')";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll33);
                    pst.execute();
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll3);
                    pst.execute();
                    String sqla1 = "UPDATE battry.sellbattry SET mark ='Yes' WHERE  buyserial='" + seriall + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqla1);
                    pst.executeUpdate();
                    String sqla2 = "UPDATE battry.sellbattryitems SET mark ='Yes' WHERE  buyserial='" + seriall + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqla2);
                    pst.executeUpdate();

                }
                String sqldaf1 = "SELECT * FROM battry.sellbattryitems where buyserial='" + seriall + "' ";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sqldaf1);
                rs = pst.executeQuery();
                int dialogButton = JOptionPane.YES_NO_OPTION;
                    int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد طباعه الفاتورة ", "رسالة تاكيد ؟ ", dialogButton);
                    if (dialogResult == 0) {
                        InputStream in = null;
                        try {

                            in = this.getClass().getResourceAsStream("/reports/bill.jasper");
                            Map<String, Object> para = new HashMap<String, Object>();
                            para.put("serial", seriall);
                            para.put("paid", paidk);
                            para.put("remaining", remainingk);
                            para.put("billprice", totalk);
                            para.put("khsmx", khsmk);

                            JasperPrint j = JasperFillManager.fillReport(in, para,DBConnect.con);
                            JasperViewer.viewReport(j, false);
                        } catch (JRException ex) {

                            JOptionPane.showMessageDialog(null, ex);
                        } finally {
                        }
                    }
                 clear2();
                auto_id();
                tablelord();
                Calendar cal = new GregorianCalendar();
                int monthh = cal.get(Calendar.MONTH) + 1;
                int yearr = cal.get(Calendar.YEAR);
                int dayy = cal.get(Calendar.DAY_OF_MONTH);
                dayyy = String.valueOf(dayy);
                if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                        || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
                    dayyy = String.valueOf(dayy);
                    dayyy = "0" + dayyy;
                }
                day.setText(dayyy);
                month.setText(Integer.toString(monthh));
                year.setText(Integer.toString(yearr));
            } else {
                JOptionPane.showMessageDialog(this, "المدفوع اكبر من الكلي");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, " ادخل مبلغ صحيح");
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel tmodel = (DefaultTableModel) jTable1.getModel();
        int selectrowindex = jTable1.getSelectedRow();
        serialid.setText(tmodel.getValueAt(selectrowindex, 5).toString());
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmkindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmkindKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmkindKeyReleased

    private void cmkindKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmkindKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmkindKeyPressed

    private void cmkindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmkindActionPerformed
        Object obj = evt.getSource();
        if (obj == cmkind) {
            try {
                String sqll = "SELECT *  FROM battry.papertype where name = '" + cmkind.getSelectedItem().toString() + "' ";

                pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);

                rs = pst.executeQuery();

                while (rs.next()) {

                    String pricee = rs.getString("price");

                    price.setText(pricee);

                }
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_cmkindActionPerformed

    private void cmkindMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmkindMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmkindMouseReleased

    private void cmkindMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmkindMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmkindMousePressed

    private void cmkindMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmkindMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmkindMouseEntered

    private void cmkindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmkindMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmkindMouseClicked

    private void priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyReleased
      
    }//GEN-LAST:event_priceKeyReleased

    private void paidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paidKeyReleased
        try {
            float amount = Float.parseFloat(totalbill.getText());
            float paidd = Float.parseFloat(paid.getText());
            float khsmk = Float.parseFloat(khsm.getText());
            float totall = amount - (paidd + khsmk);
            remaining.setText("" + totall);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_paidKeyReleased

    private void numberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_numberKeyReleased

    private void kholafKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kholafKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_kholafKeyReleased

    private void tkfelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tkfelKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tkfelKeyReleased

    private void numberbookKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberbookKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_numberbookKeyReleased

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_nameKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox cmcustomer;
    private javax.swing.JComboBox cmkind;
    private javax.swing.JLabel customerserial;
    private javax.swing.JLabel date4;
    public javax.swing.JTextField day;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField kholaf;
    private javax.swing.JTextField khsm;
    private javax.swing.JLabel kind1;
    private javax.swing.JTextField kindd;
    public javax.swing.JTextField month;
    public javax.swing.JTextField name;
    public javax.swing.JTextField number;
    public javax.swing.JTextField numberbook;
    private javax.swing.JLabel numberr1;
    private javax.swing.JRadioButton one;
    private javax.swing.JTextField paid;
    public javax.swing.JTextField price;
    private javax.swing.JTextField remaining;
    private javax.swing.JLabel s3;
    private javax.swing.JLabel s4;
    private javax.swing.JButton save;
    private javax.swing.JButton save1;
    private javax.swing.JLabel serialbuy;
    private javax.swing.JLabel serialid;
    private javax.swing.JLabel serialid4;
    public javax.swing.JTextField tkfel;
    private javax.swing.JTextField totalbill;
    private javax.swing.JRadioButton two;
    private javax.swing.JLabel type1;
    private javax.swing.JLabel typecustomer;
    public javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables

    public void tablelord() {
        try {
            String datee1 = year.getText() + "-" + month.getText() + "-" + day.getText();
            String sqll = "SELECT * FROM battry.sellbattryitems where buyserial='" + serialbuy.getText() + "' "
                    + "AND  customername = '" + cmcustomer.getSelectedItem().toString() + "' and datee='" + datee1 + "' order by id";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            int x = 1;
            while (rs.next()) {
                Object row[] = {
                    rs.getString("total"),
                    rs.getString("number"),
                    rs.getString("price"),
                    rs.getString("type"),
                    rs.getString("item"),
                    rs.getString("id"),};
                model.addRow(row);
                x++;

            }
            if (x >= 11) {
            } else {
                for (int z = x; z < 13; z++) {
                    Object rowData[] = {
                        "", "", "", "", "",};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException ex) {

        }
    }

    public void clear() {
        price.setText("0");
        number.setText("1");
        numberbook.setText("1");
        name.setText("");
        cmkind.setSelectedIndex(0);
        cmcustomer.setEnabled(true);
        kholaf.setText("0");
        tkfel.setText("0");
    }
     public void clear2() {
        price.setText("0");
        number.setText("1");
        numberbook.setText("1");
        name.setText("");
        cmcustomer.setSelectedIndex(0);
        cmkind.setSelectedIndex(0);
        cmcustomer.setEnabled(true);
        kholaf.setText("0");
        tkfel.setText("0");
        totalbill.setText("0");
        paid.setText("0");
        khsm.setText("0");
        remaining.setText("0");
    }
    

    public void customer() {
        try {
            String sql = "SELECT name  FROM battry.customer  where type = 'ورق' order by name";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                String namee = rs.getString("name");

                cmcustomer.addItem(namee);

            }

        } catch (SQLException ex) {

        }
    }

    public void mkas() {
        try {
            String sql = "SELECT name  FROM battry.papertype order by id";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                String namee = rs.getString("name");

                cmkind.addItem(namee);

            }

        } catch (SQLException ex) {

        }
    }

    public void auto_id() {

        try {
            String sqll = "SELECT buyserial FROM battry.sellbattry where id=(select max(id)FROM battry.sellbattry )";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            if (rs.next()) {
                String rnno = rs.getString("buyserial");
                int co = rnno.length();
                String txt = rnno.substring(0, 3);
                String num = rnno.substring(3, co);
                int n = Integer.parseInt(num);
                n++;
                String snum = Integer.toString(n);
                String ftxt = txt + snum;
                serialbuy.setText(ftxt);
            } else {
                serialbuy.setText("BN-1001");
            }
        } catch (SQLException ex) {

        }

    }

}
