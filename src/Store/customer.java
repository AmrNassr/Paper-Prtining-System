/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Store;

import hany.DBConnect;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author amnassar
 */
public final class customer extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
     
    PreparedStatement pst;
    ResultSet rs;
    public String y;
    int day;
    int month;
    int year;

    public customer() {
        initComponents();
         
        tablelord();
        clear();
        TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tdetails.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
         tdetails.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        tdetails.getTableHeader().setFont(new Font("Arial", Font.BOLD, 20));
        tdetails.getTableHeader().setOpaque(false);
        tdetails.getTableHeader().setBackground(new Color(138, 203, 195));
        tdetails.getTableHeader().setForeground(new Color(0, 0, 0));
        tdetails.setRowHeight(40);
        Calendar cal = new GregorianCalendar();
        day = cal.get(Calendar.DAY_OF_MONTH);
        month = cal.get(Calendar.MONTH) + 1;
        year = cal.get(Calendar.YEAR);
        name.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        privateauto_id();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        save5 = new javax.swing.JButton();
        save6 = new javax.swing.JButton();
        serial = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        autoserial4 = new javax.swing.JLabel();
        delete4 = new javax.swing.JButton();
        save4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        serialid4 = new javax.swing.JLabel();
        date4 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel14.setBackground(new java.awt.Color(0, 0, 0));
        jPanel14.setForeground(new java.awt.Color(255, 255, 255));
        jPanel14.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel14.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setText("رقم الهاتف");
        jPanel14.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 110, 140, 30));

        phone.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        phone.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jPanel14.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 230, 30));

        jScrollPane1.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(204, 255, 255));

        tdetails.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "الهاتف", "الاسم", "كود العميل", "id"
            }
        ));
        tdetails.setFocusable(false);
        tdetails.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tdetails.setRowHeight(25);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setShowVerticalLines(false);
        tdetails.getTableHeader().setReorderingAllowed(false);
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(3).setMinWidth(1);
            tdetails.getColumnModel().getColumn(3).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(3).setMaxWidth(1);
        }

        jPanel14.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 880, 260));

        save5.setBackground(new java.awt.Color(138, 203, 195));
        save5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save5.setText("بحث");
        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });
        jPanel14.add(save5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 110, 40));

        save6.setBackground(new java.awt.Color(138, 203, 195));
        save6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save6.setText("تفريغ");
        save6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save6ActionPerformed(evt);
            }
        });
        jPanel14.add(save6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 110, 40));

        serial.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        serial.setText("jLabel1");
        jPanel14.add(serial, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 140, 40));

        name.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel14.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 230, 30));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel17.setText("اسم العميل");
        jPanel14.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, 140, 30));

        autoserial4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        autoserial4.setForeground(new java.awt.Color(255, 255, 255));
        autoserial4.setText("لإثسف");
        jPanel14.add(autoserial4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, 170, 60));

        delete4.setBackground(new java.awt.Color(138, 203, 195));
        delete4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        delete4.setText("مسح");
        delete4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete4ActionPerformed(evt);
            }
        });
        jPanel14.add(delete4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 550, 120, 40));

        save4.setBackground(new java.awt.Color(138, 203, 195));
        save4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save4.setText("حفظ");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });
        jPanel14.add(save4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 120, 40));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel14.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 720));

        serialid4.setText("jLabel1");
        jPanel14.add(serialid4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date4.setText("jLabel1");
        jPanel14.add(date4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 170, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 979, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delete4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete4ActionPerformed
        if (serialid4.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "اختر العميل المراد مسحة");

        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "حفظ العملية ؟", "رسالة تاكيد ", dialogButton);
            if (dialogResult == 0) {
                try {
                    String sql = "DELETE FROM battry.customer WHERE id='" + serialid4.getText() + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(rootPane, " تم مسح العميل بنجاح");
                    tablelord();
                    clear();
                    privateauto_id();
                } catch (SQLException ex) {

                }
                clear();
            } else {

                JOptionPane.showMessageDialog(this, "الغاء العملية ");
            }
        }
    }//GEN-LAST:event_delete4ActionPerformed

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        try {
            String namee = name.getText();
            String phonee = phone.getText();
            if (serialid4.getText().trim().isEmpty()) {

                if (name.getText().trim().isEmpty() || phone.getText().trim().isEmpty() )  {
                    JOptionPane.showMessageDialog(this, " من فضلك اكمل البيانات ");
                } else {
                    int dialogButton = JOptionPane.YES_NO_OPTION;
                    int dialogResult = JOptionPane.showConfirmDialog(this, "حفظ العملية ؟", "رسالة تاكيد ", dialogButton);
                    if (dialogResult == 0) {
                        try {
                            String sql = "INSERT INTO battry.customer (name,phone,serial) VALUES"
                                    + " ('" + namee + "','" + phonee + "','"+serial.getText()+"')";
                            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "تم اضافة العميل بنجاح");
                            tablelord();
                            clear();
                            privateauto_id();
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "العميل مضاف من قبل");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "الغاء العملية");

                    }
                }
            } else {
                String sqla = "UPDATE battry.customer SET name='" + namee + "',phone='" + phonee + "' where id = '" + serialid4.getText() + "'";
                pst = (PreparedStatement) DBConnect.con.prepareStatement(sqla);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "تم التعديل علي العميل");
                tablelord();
                clear();
                privateauto_id();
                name.requestFocus();
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_save4ActionPerformed

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel = (DefaultTableModel) tdetails.getModel();
        int selectrowindex = tdetails.getSelectedRow();
        serialid4.setText(tmodel.getValueAt(selectrowindex, 3).toString());
        name.setText(tmodel.getValueAt(selectrowindex, 1).toString());
        phone.setText(tmodel.getValueAt(selectrowindex, 0).toString());
        
    }//GEN-LAST:event_tdetailsMouseClicked

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
        try {
            String namee = name.getText();
            String phonee = phone.getText();
         
            String sqll = "SELECT * FROM battry.customer WHERE  1=1 ";
            if(!name.getText().trim().isEmpty())
            {
                sqll=sqll+" AND name LIKE '%"+namee+"%'";
            }
            else if (!phone.getText().trim().isEmpty())
            {
                sqll=sqll+" AND phone LIKE '%"+phonee+"%'";
            }
            
            
            pst=(PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails.getModel();
            model.setRowCount(0);
            int k = 0;
            while (rs.next())
            {
                Object row[] = {
                   
                    rs.getString("phone"),
                    rs.getString("name"),
                     rs.getString("serial"),
                    rs.getString("id")

                };
                model.addRow(row);
                k++;
            }
            for(int i = k ;i<11;i++)
            {
                Object rowData[] = {
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            
        }

    }//GEN-LAST:event_save5ActionPerformed

    private void save6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save6ActionPerformed
        clear();
        tablelord();
        privateauto_id();
    }//GEN-LAST:event_save6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel autoserial4;
    private javax.swing.JLabel date4;
    private javax.swing.JButton delete4;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phone;
    private javax.swing.JButton save4;
    private javax.swing.JButton save5;
    private javax.swing.JButton save6;
    private javax.swing.JLabel serial;
    private javax.swing.JLabel serialid4;
    private javax.swing.JTable tdetails;
    // End of variables declaration//GEN-END:variables

    public void tablelord() {
        try {
            String sqll = "SELECT * FROM battry.customer order by id ";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tdetails.getModel();
            model.setRowCount(0);
            int x = 1;
            while (rs.next()) {
                Object row[] = {
                    rs.getString("phone"),
                    rs.getString("name"),
                     rs.getString("serial"),
                    rs.getString("id")
                };
                model.addRow(row);
                x++;

            }
            if (x >= 11) {
            } else {
                for (int z = x; z < 13; z++) {
                    Object rowData[] = {
                        "", "", "", "", "",};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException ex) {

        }
    }

    public void clear() {
        name.setText("");
        phone.setText("");
        serialid4.setText("");
    }
public void privateauto_id(){

         try {
             String sql = "SELECT serial FROM battry.customer ORDER BY id DESC LIMIT 1";
             pst=(PreparedStatement) DBConnect.con.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
                 String rnno=rs.getString("serial");
                 int co=rnno.length();
                 String txt=rnno.substring(0,3);
                 String num = rnno.substring(3,co);
                 int n = Integer.parseInt(num);
                 n++;
                 String snum=Integer.toString(n);
                 String ftxt=txt+snum;
                 serial.setText("");
                 serial.setText(ftxt);
             }
             else
             {
                 serial.setText("CN-1001");
             }
         } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
         }
    
}
}
