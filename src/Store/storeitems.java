/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Store;

import hany.DBConnect;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/**
 *
 * @author amnassar
 */
public final class storeitems extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
     
    PreparedStatement pst;
    ResultSet rs;
    public String y;
    public String datee;
    public Calendar cal;
    String dayyy;
    String smokerr;
    String sugarr;
    String pressurr;

    public storeitems(String x) throws IOException, ParseException {
        initComponents();
         
        category();
        clear();
        tablelord();

        barcode.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        name.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tdetails.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
        tdetails.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
        cal = new GregorianCalendar();

        int month = cal.get(Calendar.MONTH) + 1;
        int year = cal.get(Calendar.YEAR);
        int dayy = cal.get(Calendar.DAY_OF_MONTH);
        dayyy = String.valueOf(dayy);
        if (dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
                || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9) {
            dayyy = String.valueOf(dayy);
            dayyy = "0" + dayyy;
        }
        date1.setText(year + "-" + month + "-" + dayyy);
        datee = date1.getText().toString();
        if (x.equals("admin")) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        barcode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        gomla = new javax.swing.JTextField();
        cmcategory = new javax.swing.JComboBox();
        save3 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        save4 = new javax.swing.JButton();
        save5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tdetails.setBackground(new java.awt.Color(138, 203, 195));
        tdetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "عدد", "المخزن", "سعر الجملة", "سعر قطاعي", "كود المنتج", "اسم المنتج", "id"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(2).setMinWidth(150);
            tdetails.getColumnModel().getColumn(2).setPreferredWidth(150);
            tdetails.getColumnModel().getColumn(2).setMaxWidth(150);
            tdetails.getColumnModel().getColumn(6).setMinWidth(1);
            tdetails.getColumnModel().getColumn(6).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(6).setMaxWidth(1);
        }

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 930, 290));

        barcode.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                barcodeKeyPressed(evt);
            }
        });
        jPanel10.add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 50, 220, 40));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel9.setText("المخزن");
        jPanel10.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 120, 120, 40));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel20.setText("سعر جملة");
        jPanel10.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 90, 40));

        gomla.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        gomla.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gomla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                gomlaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gomlaKeyTyped(evt);
            }
        });
        jPanel10.add(gomla, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 90, 40));

        cmcategory.setEditable(true);
        cmcategory.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        cmcategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        jPanel10.add(cmcategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 220, 40));

        save3.setBackground(new java.awt.Color(138, 203, 195));
        save3.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        save3.setText("حفظ");
        save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save3ActionPerformed(evt);
            }
        });
        jPanel10.add(save3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 100, 40));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setText("سعر قطاعي");
        jPanel10.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 110, 40));

        price.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });
        jPanel10.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 90, 40));

        save4.setBackground(new java.awt.Color(138, 203, 195));
        save4.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        save4.setText("تفريغ");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });
        jPanel10.add(save4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 110, 40));

        save5.setBackground(new java.awt.Color(138, 203, 195));
        save5.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        save5.setText("بحث");
        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });
        jPanel10.add(save5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 110, 40));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel18.setText("الباركود");
        jPanel10.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 50, 90, 40));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel15.setText("اسم المنتج");
        jPanel10.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 120, 40));

        name.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jPanel10.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 280, 40));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        serialid.setText("jLabel1");
        jPanel10.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date1.setText("jLabel1");
        jPanel10.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel = (DefaultTableModel) tdetails.getModel();
        //bid,name, price, publisher, book_type, b_code, date, category
        int selectrowindex = tdetails.getSelectedRow();
        serialid.setText(tmodel.getValueAt(selectrowindex, 6).toString());
        name.setText(tmodel.getValueAt(selectrowindex, 5).toString());
        barcode.setText(tmodel.getValueAt(selectrowindex, 4).toString());
        price.setText(tmodel.getValueAt(selectrowindex, 3).toString());
        gomla.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        cmcategory.setSelectedItem(tmodel.getValueAt(selectrowindex, 1).toString());
        barcode.setEditable(false);

    }//GEN-LAST:event_tdetailsMouseClicked

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        clear();
        tablelord();
        barcode.setEditable(true);
    }//GEN-LAST:event_save4ActionPerformed

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
        try {
            String namee = name.getText();
            String pricee = price.getText();
            String barcodee = barcode.getText();
            String categoryy = cmcategory.getSelectedItem().toString();

            String sqll = "SELECT * FROM battry.storeitemlist WHERE  1=1 ";
            if (!name.getText().trim().isEmpty()) {
                sqll = sqll + " AND name LIKE '%" + namee + "%'";
            }
            if (!price.getText().trim().isEmpty()) {
                sqll = sqll + " AND price LIKE '%" + pricee + "%'";
            }
            if (!gomla.getText().trim().isEmpty()) {
                sqll = sqll + " AND gomla LIKE '%" + gomla.getText() + "%'";
            }

            if (!barcode.getText().trim().isEmpty()) {
                sqll = sqll + " AND barcode LIKE '%" + barcodee + "%'";
            }
            if (!cmcategory.getSelectedItem().toString().trim().isEmpty()) {
                sqll = sqll + " AND category LIKE '%" + categoryy + "%'";
            }
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tdetails.getModel();
            model.setRowCount(0);
            int k = 0;
            while (rs.next()) {
                Object row[] = {
                    rs.getString("number"),
                    rs.getString("category"),
                    rs.getString("gomla"),
                    rs.getString("price"),
                    rs.getString("barcode"),
                    rs.getString("name"),
                    rs.getString("id")
                };
                model.addRow(row);
                k++;
            }
            for (int i = k; i < 11; i++) {
                Object rowData[] = {
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",};
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(storeitems.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_save5ActionPerformed

    private void save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save3ActionPerformed
        try {
            String namee = name.getText();
            float pricee = Float.parseFloat(price.getText());
            String categoryy = cmcategory.getSelectedItem().toString();
            String barcodee = barcode.getText();
            if (serialid.getText().trim().isEmpty()) {

                if (name.getText().trim().isEmpty() || price.getText().trim().isEmpty() || gomla.getText().trim().isEmpty() || barcode.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, " من فضلك ادخل بيانات المنتج كامله");
                } else {
                    int dialogButton = JOptionPane.YES_NO_OPTION;
                    int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العمليه", "تاكيد العمليه", dialogButton);
                    if (dialogResult == 0) {
                        try {
                            String sql = "INSERT INTO battry.storeitemlist (gomla,barcode,price,name,category) VALUES"
                                    + " ('" + gomla.getText() + "','" + barcodee + "','" + pricee + "','" + namee + "','" + categoryy + "')";
                            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "تم اضافه المنتج بنجاح");
                            clear();
                            tablelord();

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "المنتج موجود من قبل");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, " تم الغاء العمليه");

                    }

                }
            } else {
                try {
                    String sqla = "UPDATE battry.storeitemlist SET name='" + namee + "',price='" + pricee + "',gomla='" + gomla.getText() + "', category='" + categoryy + "'"
                            + " where  id='" + serialid.getText() + "'";
                    pst = (PreparedStatement) DBConnect.con.prepareStatement(sqla);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "تم تعديل المنتج بنجاح");
                    clear();
                    tablelord();
                    barcode.setEditable(true);
                } catch (SQLException ex) {

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "المبلغ غير صحيح");
        }
    }//GEN-LAST:event_save3ActionPerformed

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped

    }//GEN-LAST:event_priceKeyTyped

    private void priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyReleased

    }//GEN-LAST:event_priceKeyReleased

    private void barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            name.requestFocus();
        }
    }//GEN-LAST:event_barcodeKeyPressed

    private void gomlaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gomlaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_gomlaKeyReleased

    private void gomlaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gomlaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_gomlaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcode;
    private javax.swing.JComboBox cmcategory;
    private javax.swing.JLabel date1;
    private javax.swing.JTextField gomla;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField price;
    private javax.swing.JButton save3;
    private javax.swing.JButton save4;
    private javax.swing.JButton save5;
    private javax.swing.JLabel serialid;
    private javax.swing.JTable tdetails;
    // End of variables declaration//GEN-END:variables
public void clear() {
        name.setText("");
        serialid.setText("");
        cmcategory.setSelectedIndex(0);
        barcode.setText("");
        price.setText("");

    }

    public void tablelord() {
        try {
            String sqll = "SELECT * FROM battry.storeitemlist order by name";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tdetails.getModel();
            model.setRowCount(0);
            int k = 0;
            while (rs.next()) {
                Object row[] = {
                    rs.getString("number"),
                    rs.getString("category"),
                    rs.getString("gomla"),
                    rs.getString("price"),
                    rs.getString("barcode"),
                    rs.getString("name"),
                    rs.getString("id"),};
                model.addRow(row);
                k++;
            }
            for (int i = k; i < 11; i++) {
                Object rowData[] = {
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",};
                model.addRow(rowData);
            }
        } catch (SQLException ex) {

        }
    }

    public void category() {
        try {
            String sql = "SELECT name  FROM battry.storecategory order by name ";
            pst = (PreparedStatement) DBConnect.con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("name");

                cmcategory.addItem(name);

            }

        } catch (SQLException ex) {

        }
    }
}
